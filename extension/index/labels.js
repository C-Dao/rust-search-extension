var labelsIndex=[["A-runtime","Area: The standard library's runtime (backtraces, unwinding, stack overflow detection)"],["A-frontend","Area: frontend (errors, parsing and HIR)"],["E-easy","Call for participation: Experience needed to fix: Easy / not much"],["C-cleanup","Category: PRs that clean code up or issues documenting cleanup."],["A-typesystem","Area: The type system"],["A-linkage","Area: linking into static, shared libraries and binaries"],["I-crash","Issue: The compiler crashes (SIGSEGV, SIGABRT, etc). Use I-ICE instead when the compiler panics."],["A-LLVM","Area: Code generation parts specific to LLVM. Both correctness bugs and optimization-related issues."],["A-pretty","Area: Pretty printing."],["I-slow","Problems and improvements with respect to performance of generated code."],["A-driver","Area: rustc_driver that ties everything together into the `rustc` compiler"],["A-testsuite","Area: The testsuite used to check the correctness of rustc"],["O-windows","Operating system: Windows"],["O-linux","Operating system: Linux"],["O-macos","Operating system: macOS"],["A-debuginfo","Area: Debugging information in compiled programs (DWARF, PDB, etc.)"],["T-rustdoc","Relevant to the rustdoc team, which will review and decide on the PR/issue."],["E-hard","Call for participation: Experience needed to fix: Hard / a lot"],["C-enhancement","Category: An issue proposing an enhancement or a PR with one."],["A-attributes","Area: #[attributes(..)]"],["A-codegen","Area: Code generation"],["A-lint","Area: Lints (warnings about flaws in source code) such as unused_mut."],["A-syntaxext","Area: Syntax extensions"],["A-grammar","Area: The grammar of Rust"],["A-diagnostics","Area: Messages for errors, warnings, and lints"],["A-resolve","Area: Path resolution"],["A-lifetimes","Area: lifetime related"],["I-ICE","Issue: The compiler panicked, giving an Internal Compilation Error (ICE) ❄️"],["A-concurrency","Area: Concurrency related issues."],["A-metadata","Area: crate metadata"],["A-traits","Area: Trait system"],["O-android","Operating system: Android"],["A-parser","Area: The parsing of Rust source code to an AST."],["I-nominated","Indicates that an issue has been nominated for discussion during a team meeting."],["metabug","Issues about issues themselves (\"bugs about bugs\")"],["O-ios","Operating system: iOS"],["A-destructors","Area: destructors (Drop, ..)"],["A-ffi","Area: Foreign Function Interface (FFI)"],["A-unicode","Area: unicode related"],["E-needs-test","Call for participation: writing correctness tests"],["O-ARM","Target: ARM processors (arm, thumb and AArch64 targets)"],["O-x86","Target: x86 processors"],["O-x86_64","Target: x64 processors"],["P-low","Low priority"],["P-medium","Medium priority"],["I-compiletime","Problems and improvements with respect to compile times."],["A-visibility","Area: visibility/privacy modifiers such as `pub`"],["E-mentor","Call for participation: This issue is currently mentored."],["B-RFC-approved","Approved by a merged RFC but not yet implemented."],["A-inline-assembly","Area: inline asm!(..)"],["O-MIPS","Target: MIPS processors"],["A-plugin","Area: compiler plugins, doc.rust-lang.org/nightly/unstable-book/language-features/plugin.html"],["A-security","Area: Security related issues (example: adress space layout randomization)"],["A-closures","Area: closures (`|args| { .. }`)"],["A-dst","Area: Dynamically Sized Types"],["A-allocators","Area: Custom and system allocators"],["A-macros","Area: All kinds of macros (custom derive, macro_rules!, proc macros, ..)"],["regression-from-stable-to-nightly","Performance or correctness regression from stable to nightly."],["A-associated-items","Area: Associated items such as associated types and consts."],["A-collections","Area: std::collections."],["A-cross","Area: Cross compilation"],["A-borrow-checker","Area: The borrow checker"],["I-needs-decision","Issues in need of decision."],["A-stability","Area: issues related to #[stable] and #[unstable] attributes themselves."],["beta-nominated","Nominated for backporting to the compiler in the beta channel."],["beta-accepted","Accepted for backporting to the compiler in the beta channel."],["P-high","High priority"],["T-lang","Relevant to the language team, which will review and decide on the PR/issue."],["T-libs-api","Relevant to the library API team, which will review and decide on the PR/issue."],["T-compiler","Relevant to the compiler team, which will review and decide on the PR/issue."],["final-comment-period","In the final comment period and will be merged soon unless new substantive objections are raised."],["relnotes","Marks issues that should be documented in the release notes of the next release."],["B-unstable","Implemented in the nightly compiler and unstable."],["A-hir","Area: the High level Intermediate Representation (HIR)"],["A-mir","Area: Mid-level IR (MIR) - https://blog.rust-lang.org/2016/04/19/MIR.html"],["regression-from-stable-to-beta","Performance or correctness regression from stable to beta."],["regression-from-stable-to-stable","Performance or correctness regression from one stable version to another."],["O-windows-gnu","Toolchain: GNU, Operating system: Windows"],["O-windows-msvc","Toolchain: MSVC, Operating system: Windows"],["I-unsound","Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness"],["A-const-fn","Area: const fn foo(..) {..}. Pure functions which can be applied at compile time."],["S-waiting-on-crater","Status: Waiting on a crater run to be completed."],["E-help-wanted","Call for participation: Help is requested to fix this issue."],["A-incr-comp","Area: Incremental compilation"],["rust-2-breakage-wishlist","In the wishlist of breaking changes that requires rust 2.0"],["O-openbsd","Operating system: OpenBSD"],["O-freebsd","Operating system: FreeBSD"],["O-netbsd","Operating system: NetBSD"],["A-rustbuild","Area: Rust's build system (x.py and bootstrap)"],["A-specialization","Area: Trait impl specialization"],["A-spurious","Area: Spurious failures in builds (spuriously == for no apparent reason)"],["T-core","Relevant to the core team, which will review and decide on the PR/issue."],["A-naked","Area: #[naked], prologue and epilogue-free, functions, https://git.io/vAzzS"],["E-medium","Call for participation: Experience needed to fix: Medium / intermediate"],["A-docs","Area: documentation for any part of the project, including the compiler, standard library, and tools"],["B-RFC-implemented","Approved by a merged RFC and implemented."],["O-wasm","Target: WASM (WebAssembly), http://webassembly.org/"],["O-asmjs","Target: asm.js - http://asmjs.org/"],["O-NVPTX","Target: the NVPTX LLVM backend for running rust on GPUs, https://llvm.org/docs/NVPTXUsage.html"],["O-PowerPC","Target: PowerPC processors"],["S-waiting-on-review","Status: Awaiting review from the assignee but also interested parties."],["S-waiting-on-author","Status: This is awaiting some action (such as code changes or more information) from the author."],["S-waiting-on-team","Status: Awaiting decision from the relevant subteam (see the T-<team> label)."],["S-waiting-on-bors","Status: Waiting on bors to run and complete tests. Bors will change the label on completion."],["T-infra","Relevant to the infrastructure team, which will review and decide on the PR/issue."],["T-dev-tools","Relevant to the dev-tools subteam, which will review and decide on the PR/issue."],["A-inference","Area: Type inference"],["A-NLL","Area: Non Lexical Lifetimes (NLL)"],["T-cargo","Relevant to the cargo team, which will review and decide on the PR/issue."],["S-inactive","Status: Inactive and waiting on the author. This is often applied to closed PRs."],["C-future-compatibility","Category: future compatibility lints"],["C-feature-request","Category: A feature request, i.e: not implemented / a PR."],["O-musl","Target: The musl libc"],["I-compilemem","Problems and improvements with respect to memory usage during compilation."],["A-libtest","Area: #[test] related"],["A-sanitizers","Area: Sanitizers for correctness and code quality."],["A-impl-trait","Area: impl Trait. Universally / existentially quantified anonymous types with static dispatch."],["A-simd","Area: SIMD (Single Instruction Multiple Data)"],["A-target-specs","Area: compile-target specifications"],["O-redox","Operating system: Redox, https://www.redox-os.org/"],["O-guix","Operating system: Guix, https://www.gnu.org/software/guix/"],["A-macros-2.0","Area: declarative macros 2.0, https://github.com/rust-lang/rust/issues/39412"],["A-catch","Area: `do catch { .. }` expressions"],["A-save-analysis","Area: saving results of analyses such as inference and borrowck results to a file."],["A-slice-patterns","Area: slice patterns, https://github.com/rust-lang/rust/issues/23121"],["A-thread-locals","Area: Thread local storage (TLS)"],["O-SPARC","Target: SPARC processors"],["A-rls","Area: Rust Language Server (RLS)"],["O-solaris","Operating system: Solaris"],["proposed-final-comment-period","Proposed to merge/close by relevant subteam, see T-<team> label. Will enter FCP once signed off."],["C-bug","Category: This is a bug."],["C-tracking-issue","Category: A tracking issue for an RFC or an unstable feature."],["C-feature-accepted","Category: A feature request that has been accepted pending implementation."],["A-generators","Area: Generators"],["WG-compiler-traits","Working group: Traits, https://internals.rust-lang.org/t/announcing-traits-working-group/6804"],["E-needs-mentor","Call for participation: This issue is in need of a mentor."],["WG-compiler-middle","Working group: Middle end; Everything between frontend (parser, HIR) and backend (trans, llvm)"],["WG-compiler-front","Working group: front end (Parser, HIR)"],["WG-diagnostics","Working group: diagnostics"],["WG-incr-comp","Working group: incremental compilation"],["hacktoberfest","hacktoberfest projects - https://hacktoberfest.digitalocean.com/"],["invalid","The issue is invalid and has been raised in error."],["S-blocked","Status: marked as blocked ❌ on something else such as an RFC or other implementation work."],["A-coercions","Area: implicit and explicit `expr as Type` coercions"],["T-release","Relevant to the release subteam, which will review and decide on the PR/issue."],["WG-compiler-performance","Working group: Compiler Performance"],["O-dragonfly","Operating system: DragonFly BSD"],["WG-epoch","Working group: Epoch (2018) management"],["NLL-complete","Working towards the \"valid code works\" goal"],["NLL-diagnostics","Working torwads the \"diagnostic parity\" goal"],["NLL-performant","Working towards the \"performance is good\" goal"],["NLL-sound","Working towards the \"invalid code does not compile\" goal"],["NLL-fixed-by-NLL","Bugs fixed, but only when NLL is enabled."],["WG-embedded","Of interest to the embedded Working Group"],["WG-codegen","Working Group: Codegen (Runtime perf and code size)"],["A-iterators","Area: Iterators"],["A-parallel-queries","Area: Parallel query execution"],["O-SystemZ","Target: SystemZ processors (s390x)"],["A-const-eval","Area: constant evaluation (mir interpretation)"],["S-waiting-on-bikeshed","Status: Awaiting a decision on trivial things."],["disposition-merge","This issue / PR is in PFCP or FCP with a disposition to merge it."],["S-waiting-on-perf","Status: Waiting on a perf run to be completed."],["finished-final-comment-period","The final comment period is finished for this PR / Issue."],["A-rust-2018-preview","Area: The 2018 edition preview"],["A-macros-1.2","Issues which affect macros 1.2"],["disposition-close","This PR / issue is in PFCP or FCP with a disposition to close it."],["O-NixOS","Operating system: NixOS, https://nixos.org/"],["stable-nominated","Nominated for backporting to the compiler in the stable channel."],["stable-accepted","Accepted for backporting to the compiler in the stable channel."],["A-edition-2018-lints","Area: lints supporting the 2018 edition"],["disposition-postpone",""],["I-heavy","Problems and improvements with respect to binary size of generated code."],["A-async-await","Area: Async & Await"],["E-needs-bisection","Call for participation: This issue needs a bisection to find the exact PR causing the regression"],["needs-rfc","This change is large or controversial enough that it should have an (e-)RFC accepted before doing it"],["chalk-integration","Issues blocking \"preliminary chalk integration\" milestone"],["A-doctests","Area: Documentation tests, run by rustdoc"],["A-intra-doc-links","Area: Intra-doc links, the ability to link to items in docs by name"],["A-synthetic-impls","Area: Synthetic impls, used by rustdoc to document auto traits and traits with blanket impls"],["T-community",""],["NLL-polonius","Issues related for using Polonius in the borrow checker"],["I-hang","Issue: The compiler never terminates, due to infinite loops, deadlock, livelock, etc."],["A-suggestion-diagnostics","Area: suggestions generated by the compiler applied by cargo fix"],["NLL-reference","Reference material for NLL"],["needs-fcp","This change is insta-stable, so needs a completed FCP to proceed."],["O-riscv","Target: RISC-V architecture"],["O-fuchsia","Operating system: Fuchsia"],["merged-by-bors","This PR was explicitly merged by bors"],["A-miri","Area: The miri tool"],["AsyncAwait-Focus","Async-await issues presently being focused on."],["AsyncAwait-Triaged","Async-await issues that have been triaged during a working group meeting."],["AsyncAwait-OnDeck","Async-await issues prioritized as possible next focus items"],["A-self-profile","Area: Self-profiling feature of the compiler"],["O-x32","x32 ABI"],["A-const-generics","Area: const generics (parameters and arguments)"],["A-lang-item","Area: lang items"],["A-intrinsics","Area: intrinsics"],["E-needs-mcve","Call for participation: This issue needs a Minimal Complete and Verifiable Example"],["S-waiting-on-fcp","Status: PR is in FCP and is awaiting for FCP to complete."],["A-lazy-normalization","Area: lazy normalization (tracking issue: #60471)"],["A-error-handling","Area: Error handling"],["F-type_alias_impl_trait","`#[feature(type_alias_impl_trait)]`"],["F-member_constraints","`#[feature(member_constraints)]`"],["F-impl_trait_in_bindings","`#![feature(impl_trait_in_bindings)]`"],["F-never_type","`#![feature(never_type)]`"],["F-generators","`#![feature(generators)]`"],["F-arbitrary_self_types","`#![feature(arbitrary_self_types)]`"],["F-trait_alias","`#![feature(trait_alias)]`"],["F-async_await","`#![feature(async_await)]`"],["F-async_closures","`#![feature(async_closures)]`"],["F-unsized_locals","`#![feature(unsized_locals)]`"],["F-const_fn","`#![feature(const_fn)]`"],["F-untagged_unions","`#![feature(untagged_unions)]`"],["F-simd_ffi","`#![feature(simd_ffi)]`"],["requires-nightly","This issue requires a nightly compiler in some way."],["F-thread_local","`#![feature(thread_local)]`"],["F-specialization","`#![feature(specialization)]`"],["F-slice_patterns","`#![feature(slice_patterns)]`"],["F-associated_type_bounds","`#![feature(associated_type_bounds)]`"],["F-param_attrs","`#![feature(param_attrs)]`"],["F-on_unimplemented","Error messages that can be tackled with `#[rustc_on_unimplemented]`"],["F-generic_associated_types","`#![feature(generic_associated_types)]` a.k.a. GATs"],["F-const_generics","`#![feature(const_generics)]`"],["F-dispatch_from_dyn","`#![feature(dispatch_from_dyn)]`"],["F-try_blocks","`#![feature(try_blocks)]`"],["F-or_patterns","`#![feature(or_patterns)]`"],["A-reproducibility","Area: Reproducible / Deterministic builds"],["F-raw_dylib","`#![feature(raw_dylib)]`"],["F-associated_type_defaults","`#![feature(associated_type_defaults)]`"],["F-re_rebalance_coherence","`#![feature(re_rebalance_coherence)]`"],["F-raw_ref_op","`#![feature(raw_ref_op)]`"],["const-hack","This PR introduced a hack to make things valid in `const fn`."],["I-monomorphization","Issue: An error at monomorphization time"],["F-rustc_attrs","Internal rustc attributes gated on the `#[rustc_attrs]` feature gate."],["ICEBreaker-LLVM","Bugs identified for the LLVM ICE-breaker group"],["WG-compiler-parallel","Working group working on parallelizing the compiler"],["F-decl_macro","`#![feature(decl_macro)]`"],["F-cfg_version","`#![feature(cfg_version)]`"],["F-cfg_accessible","`#![feature(cfg_accessible)]`"],["F-const_extern_fn","`#![feature(const_extern_fn)]`"],["rollup","A PR which is a rollup"],["F-object_safe_for_dispatch","`#![feature(object_safe_for_dispatch)]`"],["D-confusing","Confusing diagnostic error that should be reworked"],["D-papercut","Diagnostic error that needs small tweaks"],["D-newcomer-roadblock","Confusing diagnostic error hard to understand for new users"],["D-invalid-suggestion","A structured suggestion resulting in incorrect code"],["D-edition","Diagnostic error that should account for edition differences"],["F-non_exhaustive","`#![feature(non_exhaustive)]`"],["F-custom_test_frameworks","`#![feature(custom_test_frameworks)]`"],["F-let_chains","`#![feature(let_chains)]`"],["F-track_caller","`#![feature(track_caller)]`"],["D-inconsistent","Inconsistency in formatting, grammar or style between diagnostic messages"],["glacier","ICE tracked in rust-lang/glacier"],["lang-team-202x-edition","Something we may consider if we do another edition"],["D-incorrect","A diagnostic that is giving misleading or incorrect information"],["F-bindings_after_at","`#![feature(bindings_after_at)]`"],["F-const_in_array_repeat_expressions","`#[feature(const_in_array_repeat_expressions)]`"],["F-trait_upcasting","`#![feature(trait_upcasting)]`"],["F-unboxed_closures","`#![feature(unboxed_closures)]`"],["D-verbose","Too much output caused by a single piece of incorrect code"],["F-const_if_match","`#![feature(const_if_match)]`"],["F-const_mut_refs","`#![feature(const_mut_refs)]`"],["F-non_ascii_idents","`#![feature(non_ascii_idents)]`"],["F-const_loop","`#![feature(const_loop)]`"],["F-half_open_range_patterns","`#![feature(half_open_range_patterns)]`"],["F-exclusive_range_pattern","`#![feature(exclusive_range_pattern)]`"],["F-const_trait_impl","`#![feature(const_trait_impl)]`"],["F-const_trait_bound_opt_out","`#![feature(const_trait_bound_opt_out)]`"],["F-format_implicit_args","implicit arguments for format strings (RFC 2795)"],["F-coerce_unsized","The `CoerceUnsized` trait"],["F-marker_trait_attr","`#![feature(marker_trait_attr)]`"],["ICEBreaker-Cleanup-Crew","Helping to \"clean up\" bugs with minimal examples and bisections"],["F-move_ref_pattern","`#![feature(move_ref_pattern)]`"],["F-dropck_eyepatch","`#![feature(dropck_eyepatch)]`"],["D-terse","A diagnostic that doesn't give enough information about the problem at hand"],["O-AVR","Target: AVR processors (ATtiny, ATmega, etc.)"],["A-cranelift","Things relevant to the [future] cranelift backend"],["relnotes-perf","Performance improvements that should be mentioned in the release notes"],["A-mir-opt","Area: MIR optimizations"],["A-layout","Area: Memory layout of types"],["A-github-actions",""],["april-1st","Started on the 1st of April"],["A-meta","Area: Issues about the rust-lang/rust repository."],["P-critical","Critical priority"],["I-prioritize","Indicates that prioritization has been requested for this issue"],["F-negative_impls","#![feature(negative_impls)]"],["A-patterns","Relating to patterns and pattern matching"],["A-exhaustiveness-checking","Relating to exhaustiveness / usefulness checking of patterns"],["A-HAIR","Relating to the HAIR IR."],["T-libs","Relevant to the library team, which will review and decide on the PR/issue."],["A-mir-opt-inlining","Area: MIR inlining"],["F-unsafe-block-in-unsafe-fn","RFC #2585"],["F-target_feature_11","target feature 1.1 RFC"],["F-asm","`#![feature(asm)]` (not `llvm_asm`)"],["A-mir-opt-nrvo","Fixed by NRVO"],["A-proc-macros","Area: Procedural macros"],["F-label_break_value","`#![feature(label_break_value)]`"],["F-c_variadic","`#![feature(c_variadic)]`"],["A-floating-point","Area: Floating point numbers and arithmetic"],["D-crate-version-mismatch","Errors caused be the use of two different crate versions."]];